# Uses a button box PCB
# Don't install LED resistors
# Sensors on first 5 inputs (don't use 5V pin on JST connector)
# LED strip on 6th JST connector - jumper over R6 to provide full 5V to strip

<<: !include common/wifi.yaml
<<: !include common/esp_home_components.yaml

substitutions:
  device_name: "front_door_status_controller"
  pretty_name: "Front Door Status Controller"
  ui_name: "${pretty_name}"
  ip_address: "10.13.107.197"

esphome:
  name: "${device_name}"
  platform: ESP8266
  board: d1_mini
  build_path: "./build/${device_name}"
  on_boot:
    then:
      - light.turn_off:
          id: led_strip
      - if:
          condition:
            lambda: 'return id(button_0).state == false;'
          then:
            - light.turn_on:
                id: led_0
                red: 0%
                green: 10%
                blue: 0%
          else:
            - light.turn_on:
                id: led_0
                red: 10%
                green: 0%
                blue: 0%
      - wait_until:
          api.connected:
      - delay: 5s
      - if:
          condition:
            lambda: 'return id(glass_door_open_state).state == false;'
          then:
            - light.turn_on:
                id: led_1
                red: 0%
                green: 10%
                blue: 0%
          else:
            - light.turn_on:
                id: led_1
                red: 10%
                green: 0%
                blue: 0%
      - if:
          condition:
            lambda: 'return id(glass_door_lock_state).state == false;'
          then:
            - light.turn_on:
                id: led_2
                red: 0%
                green: 10%
                blue: 0%
          else:
            - light.turn_on:
                id: led_2
                red: 10%
                green: 0%
                blue: 0%
      - if:
          condition:
            lambda: 'return id(air_compressor_state).state == false;'
          then:
            - light.turn_on:
                id: led_3
                red: 0%
                green: 10%
                blue: 0%
          else:
            - light.turn_on:
                id: led_3
                red: 10%
                green: 0%
                blue: 0%
      - light.turn_on:
          id: shutdown_button_led
      # - if:
      #     condition:
      #       lambda: 'return id(button_1).state == false;'
      #     then:
      #       - light.turn_on:
      #           id: led_1
      #           red: 0%
      #           green: 10%
      #           blue: 0%
      #     else:
      #       - light.turn_on:
      #           id: led_1
      #           red: 10%
      #           green: 0%
      #           blue: 0%
      # - if:
      #     condition:
      #       lambda: 'return id(button_2).state == false;'
      #     then:
      #       - light.turn_on:
      #           id: led_2
      #           red: 0%
      #           green: 10%
      #           blue: 0%
      #     else:
      #       - light.turn_on:
      #           id: led_2
      #           red: 10%
      #           green: 0%
      #           blue: 0%

api:
  services:
    - service: led_1_green
      then:
        - light.turn_on:
            id: led_1
            red: 0%
            green: 10%
            blue: 0%
    - service: led_1_red
      then:
        - light.turn_on:
            id: led_1
            red: 10%
            green: 0%
            blue: 0%
    - service: led_2_green
      then:
        - light.turn_on:
            id: led_2
            red: 0%
            green: 10%
            blue: 0%
    - service: led_2_red
      then:
        - light.turn_on:
            id: led_2
            red: 10%
            green: 0%
            blue: 0%

output:
  - platform: gpio
    pin: 4
    id: shutdown_led_output

light:
  - platform: fastled_clockless
    id: led_strip
    chipset: WS2811
    pin: GPIO2
    num_leds: 5
    rgb_order: RGB
  - platform: partition
    id: led_0
    segments:
      - id: led_strip
        from: 0
        to: 0
  - platform: partition
    id: led_1
    segments:
      - id: led_strip
        from: 1
        to: 1
  - platform: partition
    id: led_2
    segments:
      - id: led_strip
        from: 2
        to: 2
  - platform: partition
    id: led_3
    segments:
      - id: led_strip
        from: 3
        to: 3
  - platform: partition
    id: led_4
    segments:
      - id: led_strip
        from: 4
        to: 4
  - platform: binary
    output: shutdown_led_output
    id: shutdown_button_led
    name: "Shutdown button LED"
    restore_mode: RESTORE_DEFAULT_ON

binary_sensor:
  - name: "Front Door Open"
    device_class: door
    id: button_0
    platform: gpio
    pin:
      number: 13
      mode: INPUT_PULLUP
      inverted: false
    on_press:
      - light.turn_on:
          id: led_0
          red: 10%
          green: 0%
          blue: 0%
    on_release:
      - light.turn_on:
          id: led_0
          red: 0%
          green: 10%
          blue: 0%

  - id: glass_door_open_state
    platform: homeassistant
    entity_id: 'binary_sensor.glass_door_open'

  - id: glass_door_lock_state
    platform: homeassistant
    entity_id: 'binary_sensor.glass_door_lock'

  - id: air_compressor_state
    platform: homeassistant
    entity_id: 'binary_sensor.air_compressor_power'
    on_press:
      - light.turn_on:
          id: led_3
          red: 10%
          green: 0%
          blue: 0%
    on_release:
      - light.turn_on:
          id: led_3
          red: 0%
          green: 10%
          blue: 0%
    
  - name: "Shutdown Button"
    id: shutdown_button
    platform: gpio
    pin:
      number: 12
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      then:
        - light.turn_off:
            id: shutdown_button_led
        - delay: 2s
        - light.turn_on:
            id: shutdown_button_led
    on_multi_click:
      - timing:
          - ON for 2s to 3s
        then: 
          - homeassistant.service:
              service: script.shutdown      

  - name: "A-Side Garage Door Open"
    device_class: garage_door
    id: button_2
    platform: gpio
    pin:
      number: 14
      mode: INPUT_PULLUP
      inverted: False
  #   on_press:
  #     - light.turn_on:
  #         id: led_x
  #         red: 10%
  #         green: 0%
  #         blue: 0%
  #   on_release:
  #     - light.turn_on:
  #         id: led_x
  #         red: 0%
  #         green: 10%
  #         blue: 0%
  #
  # - name: "Sensor 3"
  #   device_class: lock
  #   id: button_3
  #   force_update: true
  #   platform: gpio
  #   pin:
  #     number: 5
  #     mode: INPUT_PULLUP
  #     inverted: True
  #   on_press:
  #     - light.turn_on:
  #         id: led_x
  #         red: 10%
  #         green: 0%
  #         blue: 0%
  #   on_release:
  #     - light.turn_on:
  #         id: led_x
  #         red: 0%
  #         green: 10%
  #         blue: 0%
  #
